apiVersion: v1
data:
  external-server.conf: ''
  maps.conf: |
    include /etc/nginx/customization.d/maps-is_allowed.conf;
    include /etc/nginx/customization.d/maps-proxyName.conf;
    include /etc/nginx/customization.d/maps-secret.conf;
    include /etc/nginx/customization.d/maps-clientType.conf;
    include /etc/nginx/customization.d/maps-type.conf;
    include /etc/nginx/customization.d/maps-proxyUrl.conf;
    include /etc/nginx/customization.d/maps-proxyBackofficeUrl.conf;
    include /etc/nginx/customization.d/maps-proxyBackofficeName.conf;
    include /etc/nginx/customization.d/maps-original-request-uri.conf;
    include /etc/nginx/customization.d/maps-http-accept-extension.conf;
    include /etc/nginx/customization.d/maps-header-debug.conf;
    include /etc/nginx/customization.d/custom-maps-extension.conf;
  rate-limit.conf: '# remove'
  request-size.conf: ''
  resolver.conf: |
    resolver 127.0.0.1 ipv6=off;
    set_real_ip_from 127.0.0.1; # trust localhost
    set_real_ip_from unix:; # trust local unix socket
    set_real_ip_from 10.0.0.0/8; # trust class A private networks
    set_real_ip_from 172.16.0.0/12; # trust class B private networks
    set_real_ip_from 192.168.0.0/16; # trust class C private networks
    real_ip_header X-Forwarded-For;
    real_ip_recursive on;
  upstreams.conf: |
    upstream unauthorized { server unix:/tmp/unauthorized.sock; }
    upstream forbidden { server unix:/tmp/forbidden.sock; }
    upstream login_redirect { server unix:/tmp/login_redirect.sock; }
    upstream not_found { server unix:/tmp/not_found.sock; }
    upstream method_not_allowed { server unix:/tmp/method_not_allowed.sock; }
    include /etc/nginx/customization.d/upstreams.conf;
kind: ConfigMap
metadata:
  name: api-gateway-server
  labels:
    app.kubernetes.io/part-of: edge-computing
    app.kubernetes.io/managed-by: mia-platform
    mia-platform.eu/stage: '{{STAGE_TO_DEPLOY}}'
    mia-platform.eu/tenant: polimi
